name: 'Lighthouse User Flow CI Action'
description: "Audit URL's using Lighthouse user flow and test performance within PR's"
inputs:
  # GLOBAL ============================================
  customCommand:
    description: 'A custom way to execute userflow. This is helpful if another lib wraps the userflow execution in the CI'
    required: false
  rcPath:
    description: 'Path to a UFCI user-flowrc.json file'
    required: false
    default: '.user-flowrc.json'
  verbose:
    description: 'Verbose logging flag ("on" or "off")'
    required: false
    # has to be in line with @push-based/user-flow/packages/cli/src/lib/pre-set.ts#CI_PRESET
    default: 'off'
  # COLLECT ============================================
  url:
    description: 'URL to analyze'
    required: false
  ufPath:
    description: 'Path to user-flow file or folder containing user-flow files to run. (`*.uf.ts` or `*.uf.js`)'
    required: false
  configPath:
    description: 'Path to the lighthouse `config.json` file'
    required: false
  serveCommand:
    description: 'Runs a npm script to serve the target app. This has to be used in combination with `--awaitServeStdout`'
    required: false
  awaitServeStdout:
    description: 'Waits for stdout from the serve command to start collecting user-flows'
    required: false
  dryRun:
    description: 'Faster runs due to dummy results for reports ("on" or "off")'
    required: false
    # has to be in line with @push-based/user-flow/packages/cli/src/lib/pre-set.ts#CI_PRESET
    default: 'off'
  # PERSIST ============================================
  format:
    description: 'Format of the creates reports ( `html`, `json`, `md`, `stdout`)'
    required: false
  outPath:
    description: 'output folder for the user-flow reports'
    required: false
  # ASSERT =============================================
  budgetPath:
    description: 'Path to the lighthouse `budget.json` file'
    required: false
  # UPLOAD ============================================
  #artifactName:
  #  description: 'Name of the artifact group if using uploadArtifacts. default: lighthouse-results'
  #  default: 'lighthouse-results'
  #serverBaseUrl:
  #  description: 'Address of a UFCI server'
  #serverToken:
  #  description: 'API token to push to UFCI server'
  #basicAuthUsername:
  #  description: 'Basic auth username for UFCI server'
  #basicAuthPassword:
  #  description: 'Basic auth password for UFCI server'
outputs:
  resultPath: # path to md output
    description: 'The path in with the user flow results are saved'
  resultSummary: # md report as string of all user flows
    description: 'The summary report of all user flow results of the current run'
runs:
  using: 'node16'
  main: './main.js'
branding:
  icon: 'bar-chart-2' # un-sorted bar chart
  color: 'gray-dark'
